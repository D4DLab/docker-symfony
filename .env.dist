# Docker for Symfony version
D4D_VERSION=1.0.11

# Project's path (absolute or relative)
PROJECT_PATH=./project

# Project domains
PROJECT_DOMAIN_1=symfony.local
PROJECT_DOMAIN_2=symfony2.local
PROJECT_DOMAIN_3=symfony3.local
PROJECT_DOMAIN_4=symfony4.local

# Nginx document_root
DOCUMENT_ROOT=public

# Symfony front controller
SYMFONY_FRONT_CONTROLLER=index.php

# Symfony vs Symfony + Progressive App. Possible values: SF, SF_PWA, WP
PROJECT_TYPE=SF
SF_PATH=admin

NGINX_LOG_PATH=./var/log/nginx/
MONGODB_LOG_PATH=./var/log/mongodb/
MYSQL_DATA_PATH=./var/lib/mysql
MONGODB_DATA_PATH=./var/lib/mongodb
MYSQL_DUMP_PATH=./db

# Linux users: Set this to user id from the host system to avoid permission problems.
# Get the user id with: "id -u"
USER_ID=
GROUP_ID=

# Security
SSH_KEY_PATH=~/.ssh

# User main directory where user configuration is stored like /root
USER_CONFIG_PATH=./user

# Debian OS available versions: jessie, stretch, buster
DEBIAN_VERSION=stretch

# PHP available versions: 5.6, 7.0, 7.1, 7.2, 7.3, 7.4
PHP_VERSION=7.2

# Nginx settings
NGINX_VERSION=1.17.8-1~stretch
NGINX_CACHE=yes
# Nginx custom configuration
NGINX_FASTCGI_BUFFERS="8 8k"
NGINX_FASTCGI_BUFFER_SIZE=8k

# Composer
COMPOSER_PATH=./.composer

# MySQL
MYSQL_ROOT_PASSWORD=root
MYSQL_DATABASE=db_name
MYSQL_USER=db_user
MYSQL_PASSWORD=db_password

# MongoDB
MONGODB_ROOT_USERNAME=root
MONGODB_ROOT_PASSWORD=root
MONGODB_DATABASE=db_name
MONGODB_USERNAME=db_user
MONGODB_PASSWORD=db_password
MONGODB_REPLICA_SET_NAME=rs0

# MySQL available versions: 5.6, 5.7, 8.0
MYSQL_VERSION=5.6
# MariaDB available versions: 10.1, 10.2, 10.3, 10.4, 10.5
MARIADB_VERSION=10.5
# MySQL vs MariaDB. Possible values: mysql, mariadb
MYSQL_INST=mysql

MYSQL_MAX_ALLOWED_PACKET=64M
MYSQL_INNODB_LOG_FILE_SIZE=48M
MYSQL_WAIT_TIMEOUT=28800

# Default MySQL character set and collation
MYSQL_CHARACTER_SET_SERVER=utf8
MYSQL_COLLATION_SERVER=utf8_unicode_ci

DEFAULT_TIMEZONE=Europe/Vilnius

# PHP settings
PHP_MEMORY_LIMIT=2048M
PHP_MAX_EXECUTION_TIME=30
# upload_max_filesize, post_max_size
PHP_UPLOAD_MAX_FILESIZE=1024M

# phpMyAdmin configuration
PMA_AUTO_LOGIN=no

# Open ports
PORT_MYSQL=3306
PORT_NGINX=80
PORT_PMA=8080
PORT_RABBITMQ_TCP_LISTENER=5673
PORT_RABBITMQ_MANAGEMENT=15672

PORT_ELASTICSEARCH=9200
PORT_ELASTICSEARCH_HEAD=9100
PORT_ELASTICSEARCH_KIBANA=5601

PORT_NGROK=4551

# Blackfire
BLACKFIRE_SERVER_ID=
BLACKFIRE_SERVER_TOKEN=
BLACKFIRE_CLIENT_ID=
BLACKFIRE_CLIENT_TOKEN=

# Xdebug
XDEBUG=no
XDEBUG_CONFIG=1
XDEBUG_REMOTE_ENABLE=1
XDEBUG_REMOTE_AUTOSTART=1
XDEBUG_REMOTE_PORT=9000

# Linux users, uncomment:
# XDEBUG_REMOTE_CONNECT_BACK=1
# If you want to XDEBUG from CLI, don't use XDEBUG_REMOTE_CONNECT_BACK:
# Enter the IP adress of your Docker bridge, to get this address:
# $ ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+'
# XDEBUG_REMOTE_HOST=

# macOS uncomment (Docker for Mac CE version >= 17.06.0):
# XDEBUG_REMOTE_HOST=docker.for.mac.localhost
# macOS uncomment (Docker for Mac CE version >= 17.12.0):
# XDEBUG_REMOTE_HOST=docker.for.mac.host.internal

# Windows uncomment (Docker for Windows CE >= 17.06.0):
# XDEBUG_REMOTE_HOST=docker.for.win.localhost

# If you're running an older version of Docker you can use this:
# Support for this is deprecated!
# For Docker for macOS or Windows, you need to provide your IP address.
# For macOS, you can create an alias of your loopback (127.0.0.1) address
# with the following command:
#
# sudo ifconfig lo0 alias 10.254.254.254 255.255.255.0
#
# If you are running Linux and sharing your .env with mixed-OS team members,
# you can also create a URL alias using the following:
#
# sudo ip -4 addr add 10.254.254.254/32 dev lo
# XDEBUG_REMOTE_HOST=10.254.254.254

# Pipe XDebug logs to STDOUT? You only need to do this if Xdebug isn't working.
# XDEBUG_CONFIG=remote_log=/dev/stdout

# Xdebug IDE configuration.
PHP_IDE_CONFIG=serverName=symfony-docker

# Node JS available versions: 4.x, 6.x, 7.x, 8.x, 9.x, 10.x, 11.x, 12.x, 13.x
NODE_JS_VERSION=10.x

CLEAN_NGINX_LOGS=no
CLEAN_SF_logs=no

# docker-compose.yml configuration
YARN=yes
WKHTMLTOPDF=yes
MAILHOG=yes
PMA=yes
REDIS=no
RABBITMQ=no
SUPERVISOR=no
ELASTICSEARCH=no
NGROK=no
MONGODB=no
BLACKFIRE=no

# Enable ionCube
# ionCube is a PHP module extension that loads encrypted PHP files and speeds up webpages.
# It is often required for PHP-based applications.
IONCUBE=no

RABBITMQ_VERSION=3.8.3
ELASTICSEARCH_VERSION=6.8.3
MONGODB_VERSION=4.4.0

#!/bin/bash

# This script will prepare a Dockerfile

WORK_DIR=$(pwd)

cd ${WORK_DIR}

#Added for security
chmod 700 ${WORK_DIR}/build >/dev/null 2>&1
chmod 700 ${WORK_DIR} >/dev/null 2>&1

source ${WORK_DIR}/.env

cp config/php/Dockerfile.build config/php/Dockerfile.tmp

PACKAGE_LIST=('gnupg1' 'openssl' 'git' 'unzip' 'libzip-dev' 'nano' 'libpng-dev' 'libmagickwand-dev' 'curl' 'xauth' 'xvfb' 'openssh-client' 'less' 'inkscape' 'cron' 'exiftool' 'libicu-dev' 'libmcrypt-dev' 'librabbitmq-dev' 'librabbitmq4' 'supervisor')
PHP_EXT_INSTALL=('pdo' 'pdo_mysql' 'opcache' 'zip' 'gd' 'mysqli' 'exif' 'bcmath' 'calendar' 'intl')
PHP_EXT_ENABLE=('imagick' 'mysqli' 'calendar' 'exif' 'bcmath')
PECL_INSTALL=('imagick')

if [ "${PHP_VERSION}" = "5.6" ]; then
    sed -i "s#RUN echo 'extension=apc.so' >> \$PHP_INI_DIR\/conf.d\/docker\-php\-ext\-apcu.ini##g" config/php/Dockerfile.tmp
fi

if [ "${PHP_VERSION}" != "5.6" ]; then
    PHP_EXT_ENABLE+=('apcu')
    PECL_INSTALL+=('apcu' 'apcu_bc')
fi

if [ "${PHP_VERSION}" = "5.6" ] || [ "${PHP_VERSION}" = "7.0" ] || [ "${PHP_VERSION}" = "7.1" ]; then
    PHP_EXT_INSTALL+=('mcrypt')
    PHP_EXT_ENABLE+=('mcrypt')
fi

if [ "${PHP_VERSION}" = "7.2" ] || [ "${PHP_VERSION}" = "7.3" ] || [ "${PHP_VERSION}" = "7.4" ]; then
    PHP_EXT_ENABLE+=('mcrypt')
    PECL_INSTALL+=('mcrypt')
fi

if [ "${PHP_VERSION}" = "7.4" ]; then
    sed -i 's#docker-php-ext-configure zip --with-libzip && #'""'#g' config/php/Dockerfile.tmp
    sed -i 's#docker-php-ext-configure gd \-\-with\-freetype\-dir\=\/usr\/include\/ \-\-with\-jpeg\-dir\=\/usr\/include\/ \&\& #'"docker\-php\-ext\-configure gd \-\-with\-freetype \-\-with\-jpeg \&\& "'#g' config/php/Dockerfile.tmp
fi

NPM_INSTALL_GLOBAL=('grunt-cli' 'yargs' 'async' 'sass' 'gulp' 'requirejs' 'pm2' 'uglify-js')

sed -i 's#__PACKAGE_LIST__#'"${PACKAGE_LIST[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__PHP_EXT_INSTALL__#'"${PHP_EXT_INSTALL[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__PHP_EXT_ENABLE__#'"${PHP_EXT_ENABLE[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__PECL_INSTALL__#'"${PECL_INSTALL[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__NPM_INSTALL_GLOBAL__#'"${NPM_INSTALL_GLOBAL[*]}"'#g' config/php/Dockerfile.tmp

if [ "${XDEBUG}" = "yes" ]; then
    if [ "${PHP_VERSION}" != "5.6" ] && [ "${PHP_VERSION}" != "7.0" ]; then
        PHP_EXT_ENABLE+=('xdebug')
        PECL_INSTALL+=('xdebug')
    fi

    cp config/php/conf.d/xdebug.d4d config/php/conf.d/xdebug.ini

    sed -i 's#__PHP_XDEBUG_REMOTE_PORT__#'"${XDEBUG_REMOTE_PORT}"'#g' config/php/conf.d/xdebug.ini
    sed -i 's#__PHP_XDEBUG_REMOTE_AUTOSTART__#'"${XDEBUG_REMOTE_AUTOSTART}"'#g' config/php/conf.d/xdebug.ini
    sed -i 's#__PHP_XDEBUG_REMOTE_ENABLE__#'"${XDEBUG_REMOTE_ENABLE}"'#g' config/php/conf.d/xdebug.ini
    if [ ! -z ${XDEBUG_REMOTE_HOST} ]; then
        printf '\nxdebug.remote_host = %s' ${XDEBUG_REMOTE_HOST} >> config/php/conf.d/xdebug.ini;
    fi
    if [ ! -z ${XDEBUG_REMOTE_CONNECT_BACK} ]; then
        printf '\nxdebug.remote_connect_back = %s\n' ${XDEBUG_REMOTE_CONNECT_BACK} >> config/php/conf.d/xdebug.ini
    fi
else
    sed -i 's#__PHP_XDEBUG__#'""'#g' config/php/Dockerfile.tmp
fi

if [ "${IONCUBE}" = "yes" ]; then
    sed -i 's#__PHP_IONCUBE__#'"RUN curl -fsSL 'https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz' -o ioncube.tar.gz \&\& mkdir -p /tmp/ioncube \&\& tar -xvvzf ioncube.tar.gz \&\& mv ioncube/ioncube_loader_lin_${PHP_VERSION}.so \`php-config --extension-dir\` \&\& rm -Rf ioncube.tar.gz ioncube \&\& docker-php-ext-enable ioncube_loader_lin_${PHP_VERSION}"'#g' config/php/Dockerfile.tmp
else
    sed -i 's#__PHP_IONCUBE__#'""'#g' config/php/Dockerfile.tmp
fi

if [ "${YARN}" = "yes" ]; then
    sed -i 's#__YARN__#'"RUN apt-get remove -y cmdtest \&\& curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \&\& echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \&\& apt-get update \&\& apt-get install -y yarn"'#g' config/php/Dockerfile.tmp
else
    sed -i 's#__YARN__#'""'#g' config/php/Dockerfile.tmp
fi

if [ "${WKHTMLTOPDF}" = "yes" ]; then
    sed -i 's#__WKHTMLTOPDF__#'"RUN curl -o wkhtmltox-0.12.4_linux-generic-amd64.tar.xz -sL https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz  \&\& echo '3f923f425d345940089e44c1466f6408b9619562 wkhtmltox-0.12.4_linux-generic-amd64.tar.xz' | sha1sum -c - \&\& tar -xvf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \&\& cp wkhtmltox/lib/* /usr/lib/ \&\& cp wkhtmltox/bin/* /usr/bin/ \&\& cp -r wkhtmltox/share/man/man1 /usr/share/man/ \&\& chmod a+x /usr/bin/wkhtmltopdf \&\& chmod a+x /usr/bin/wkhtmltoimage"'#g' config/php/Dockerfile.tmp
else
    sed -i 's#__WKHTMLTOPDF__#'""'#g' config/php/Dockerfile.tmp
fi

if [ "${RABBITMQ}" = "yes" ]; then
    PECL_INSTALL+=('amqp')
    sed -i 's#__RABBIT_MQ__#'"RUN echo 'extension=amqp.so' >> \$PHP_INI_DIR/conf.d/docker-php-ext-amqp.ini"'#g' config/php/Dockerfile.tmp
else
    sed -i 's#__RABBIT_MQ__#'""'#g' config/php/Dockerfile.tmp
fi

# Remove duplicate
sed -i '$!N; /^\(.*\)\n\1$/!P; D' config/php/Dockerfile.tmp

cp config/php/Dockerfile.tmp config/php/Dockerfile
rm config/php/Dockerfile.tmp

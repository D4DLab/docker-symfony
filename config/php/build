#!/bin/bash

# This script will prepare a Dockerfile

WORK_DIR=$(pwd)

cd ${WORK_DIR}

#Added for security
chmod 700 ${WORK_DIR}/build >/dev/null 2>&1
chmod 700 ${WORK_DIR} >/dev/null 2>&1

source ${WORK_DIR}/.env

cp config/php/Dockerfile.build config/php/Dockerfile.tmp

PACKAGE_LIST=('gnupg1' 'openssl' 'git' 'unzip' 'libzip-dev' 'nano' 'libpng-dev' 'libmagickwand-dev' 'curl' 'xauth' 'xvfb' 'openssh-client' 'less' 'inkscape' 'cron' 'exiftool' 'libicu-dev')
PHP_EXT_INSTALL=('pdo' 'pdo_mysql' 'opcache' 'zip' 'gd' 'mysqli' 'exif' 'bcmath' 'calendar' 'intl')
PHP_EXT_ENABLE=('imagick' 'mysqli' 'calendar' 'exif' 'bcmath')
PECL_INSTALL=('imagick')

if [ "${PHP_VERSION}" != "5.6" ]; then
    PHP_EXT_ENABLE+=('xdebug' 'apcu')
    PECL_INSTALL+=('xdebug' 'apcu' 'apcu_bc')
fi

if [ "${PHP_VERSION}" != "5.6" ] && [ "${PHP_VERSION}" != "7.0" ] && [ "${PHP_VERSION}" != "7.1" ]; then
    PACKAGE_LIST+=('libmcrypt-dev')
    PHP_EXT_ENABLE+=('mcrypt')
    PECL_INSTALL+=('mcrypt')
fi

if [ "${PHP_VERSION}" = "7.4" ]; then
    sed -i 's#docker-php-ext-configure zip --with-libzip && #'""'#g' config/php/Dockerfile.tmp
fi

NPM_INSTALL_GLOBAL=('grunt-cli' 'yargs' 'async' 'sass' 'gulp' 'requirejs')

sed -i 's#__PACKAGE_LIST__#'"${PACKAGE_LIST[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__PHP_EXT_INSTALL__#'"${PHP_EXT_INSTALL[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__PHP_EXT_ENABLE__#'"${PHP_EXT_ENABLE[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__PECL_INSTALL__#'"${PECL_INSTALL[*]}"'#g' config/php/Dockerfile.tmp
sed -i 's#__NPM_INSTALL_GLOBAL__#'"${NPM_INSTALL_GLOBAL[*]}"'#g' config/php/Dockerfile.tmp

cp config/php/Dockerfile.tmp config/php/Dockerfile
rm config/php/Dockerfile.tmp
